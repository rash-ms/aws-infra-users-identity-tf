name: pr_add_user_us

on:
  pull_request:
    branches: [ main ]
    path:
    - 'users-identity/users-identity-us/people-prod.json'
    - 'users-identity/users-identity-us/people-stg.json'
    - 'users-identity/users-identity-us/people-dev.json'
    - 'tf-identity-setup/**'
    - '.github/workflows/pr_add_user_us.yaml'

env:
    AWS_REGION: us-east-1

permissions:
    id-token: write
    contents: read
    
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      authentication_success: ${{ steps.auth_checker.outputs.authenticated }}
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.3.2

      - name: Configure AWS OPENIDC Authentication
        id: configure_aws_credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::637423205666:role/GitHubAction-AssumeRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Set success status if OIDC auth succeeds
        if: success()
        run: echo "OIDC Authentication Succeeded"
        id: oidc_success

      - name: Configure AWS credentials with secrets
        if: steps.oidc_success.outcome != 'success'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Check overall authentication success
        id: auth_checker
        run: |
          if [ "${{ steps.configure_aws_credentials.outcome }}" == "success" ] || [ "${{ steps.oidc_success.outcome }}" == "success" ]; then
            echo "::set-output name=authenticated::true"
          else
            echo "::set-output name=authenticated::false"
          fi

      - name: Install CI Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install build-essential
          make install_python_deps
        
      - name: Read JSON files and export as environment variables
        run: |
          export PEOPLE_PROD=$(cat users-identity/users-identity-us/people-prod.json)
          export PEOPLE_STG=$(cat users-identity/users-identity-us/people-stg.json)
          export PEOPLE_DEV=$(cat users-identity/users-identity-us/people-dev.json)

      - name: AWS STS GetCallerIdentity and Init, Apply Terraform
        run: |
          aws sts get-caller-identity
          make init
          echo "Running linter, if the job fails here, all you have to do is run make tf_lint_with_write commit and push"
          echo "========"
          make tf_lint_without_write
          echo "========"
          make plan
          echo "========"